generator client {
  provider = "prisma-client-js"
  output   = "./generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String 
  password String 
  email String @unique
  role Role @default(User)
  courses Course[]
}

model Course{
  id Int @id @default(autoincrement())
  title String @db.Char(100)
  description String @db.Char(500)
  sections Section[]
  categoryId Int
  userId Int
  user User @relation(fields: [userId],references: [id])
  category Category @relation(fields: [categoryId],references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category{
  id Int @id @default(autoincrement())
  name String @db.Char(100) @unique
  courses Course[]
  image String 
}

model Section{
  id Int @id @default(autoincrement())
  lessons Lesson[]
  title String @db.Char(300) 
  order Int 
  courseId Int
  course Course @relation(fields: [courseId],references: [id])
}

model Lesson{
  id Int @id @default(autoincrement())
  title String @db.Char(100)
  content String?
  quiz Quiz?
  order Int
  quizId Int?
  contentType ContentType
  videoSource VideoSource? 
  sectionId Int
  section Section @relation(fields: [sectionId],references: [id])
}
model Quiz{
  id Int @id() @default(autoincrement())
  answers Answer[]
  question String @db.Char(500)
  explanation String? @db.Char(500)
  lessonId Int @unique
  lesson Lesson @relation(fields: [lessonId],references: [id])
}

model Answer{
  id Int @id() @default(autoincrement())
  quizId Int
  quiz Quiz  @relation(fields: [quizId],references: [id])
  content String
  isCorrect Boolean
}

enum Role {
  Admin
  User
}

enum VideoSource {
  Youtube
}

enum ContentType {
  Video
  Text
  File
  Quiz
}